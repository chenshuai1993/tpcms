<?php

namespace app\xcx\controller;

use app\xcx\controller\Base;

class Xcx extends Base{

    private $appid;
    private $appsecret;


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->appid = config('xcx.appid');
        $this->appsecret = config('xcx.appsecret');
    }

    //签名验证
    public function valid()
    {
        if($this->checkSignature())
        {
            echo request()->param('echostr');
        }
        else
        {
            echo "Error";
        }
    }




    /**
     * @return bool
     * @author chenss
     * @email  css852438363@163.com
     * @desc    验证签名
     */
    private function checkSignature()
    {
        $params = request()->param();
        $wx_params_str = '';
        $wx_signature = $params['signature'];
        $wx_params =[
            config('xcx.tonken'),
            $params['timestamp'],
            $params['nonce']
        ];

        sort($wx_params,SORT_STRING);

        if(!empty($wx_params)){
            $wx_params_str = implode('',$wx_params);
            $wx_params_str = sha1($wx_params_str);

            if($wx_signature == $wx_params_str){
                return true;
            }else{
                return false;
            }
        }
    }


    //响应消息
    //responseMsg()
    public function responseMsg()
    {
        //1、接收XML数据包
        $postData = file_get_contents('php://input');//注意：这个需要设置成全局变量

        //2、处理XML数据包
        $xmlObj = simplexml_load_string($postData,"SimpleXMLElement",LIBXML_NOCDATA);

        $toUserName = $xmlObj->ToUserName; //获取开发者微信号
        $fromUserName = $xmlObj->FromUserName; //获取用户的OpenID
        $msgType = $xmlObj->MsgType; //消息的类型
        //根据消息类型来进行业务处理
        switch ($msgType) {
            case 'event':
                //接收事件推送
                echo $this->receiveEvent($xmlObj);
                break;
            case 'text':
                //接收文本消息
                echo $this->receiveText($xmlObj);
                break;
            case 'image':
                //接收图片消息
                echo $this->receiveImage($xmlObj);
                break;
            default:

                break;
        }
    }

    //接收事件推送
    //receiveEvent($obj)

    public function receiveEvent($obj)
    {
        switch ($obj->Event) {
            //接收关注事件
            case 'subscribe':
                //下发欢迎语
                $replyContent = "嗨～！终于等到你，陈帅同学的微信测试公众号。\n 呦呦切克闹  :) ";
                return $this->replyText($obj,$replyContent);
                break;
            //接收取消关注事件
            case 'unsubscribe':
                //账号的解绑
                break;
            case 'CLICK':
                switch($obj->EventKey)
                {
                    case 'STORY':
                        //回复一个图文消息
                        $newsArr = array(
                            array(
                                'Title'=>"约吗？亲！",
                                'Description'=>"玩的就是免费，军哥就是这么任性！",
                                'PicUrl'=>"http://1.moocba.applinzi.com/img/yuema.jpg",
                                'Url'=>"http://www.moocba.com/article/6"
                            ),
                            array(
                                'Title'=>"大圣归来之暑期来了",
                                'Description'=>"很久很久以前… 悟空被压在五指山下打工",
                                'PicUrl'=>"http://1.moocba.applinzi.com/img/shuqi.jpg",
                                'Url'=>"http://www.moocba.com/article/8"
                            )
                        );
                        return $this->replyNews($obj,$newsArr);
                        break;
                    case 'MMD':
                        return $this->replyText($obj,"么么哒~~~");
                        break;
                }
                break;
            default:
                # code...
                break;
        }
    }

    //接收文本消息
    public function receiveText($obj)
    {
        $content = trim($obj->Content); //获取文本消息的内容
        //关键字回复
        switch ($content) {
            case '陈帅':
                return $this->replyText($obj,"TEL：13693500974 \n QQ：852438363 \n 微信号：lalala");
                break;
            case '战狼2':
                $picArr = array('mediaId'=>"wLp_WqPAFGs-FxkWs7jHvbqESuy4YazG6QIZyOPQWD2YtXMQZyNk2LKDDCVmt8WM");
                return $this->replyImage($obj,$picArr);
                break;
            case '三生三世':
                $picArr = array('mediaId'=>"r1gdJDheGRxIOKezCzUL-LCWXykWwaNAJoDuApl_fc2qQBo6LZ0OuQIooL5MIw6-");
                return $this->replyImage($obj,$picArr);
                break;
            case '专业收钱':
                $picArr = array('mediaId'=>"r-Hx1H7gKRrIHqeSfseLd40J8KO2JrBFu-b5mFsEg5kV2Rg6uS4mvraropeJBWnp");
                return $this->replyImage($obj,$picArr);
                break;
            case '米宝':
                $picArr = array('mediaId'=>"r-Hx1H7gKRrIHqeSfseLd40J8KO2JrBFu-b5mFsEg5kV2Rg6uS4mvraropeJBWnp");
                return $this->replyImage($obj,$picArr);
                break;

            case '图文':
                $newsArr = array(
                    array(
                        'Title'=>"陈帅同学的博客",
                        'Description'=>"陈帅同学的博客,啦啦啦！",
                        'PicUrl'=>"http://www.imshuai.cn/uploads/default/default.png",
                        'Url'=>"http://www.imshuai.cn/about.html"
                    ),
                    array(
                        'Title'=>"陈帅同学的博客",
                        'Description'=>"陈帅同学的博客,啦啦啦！",
                        'PicUrl'=>"http://www.imshuai.cn/uploads/default/default.png",
                        'Url'=>"http://www.imshuai.cn/about.html"
                    ),
                );
                return $this->replyNews($obj,$newsArr);
                break;
            case '杨幂':
                $newsArr = array(
                    array(
                        'Title'=>"杨幂同学军装",
                        'Description'=>"杨幂同学军装",
                        'PicUrl'=>"http://uploadfile.bizhizu.cn/2016/1125/20161125043235417.jpg",
                        'Url'=>"m.migang.com"
                    ),
                    array(
                        'Title'=>"陈帅同学的博客",
                        'Description'=>"陈帅同学的博客,啦啦啦！",
                        'PicUrl'=>"http://www.imshuai.cn/uploads/default/default.png",
                        'Url'=>"http://www.imshuai.cn/"
                    ),
                );
                return $this->replyNews($obj,$newsArr);
                break;
            default:
                return $this->replyText($obj,$content);
                break;
        }


    }


    //回复文本消息
    public function replyText($obj,$content)
    {
        //回复文本消息

        $replyTextMsg = "<xml>
								<ToUserName><![CDATA[%s]]></ToUserName>
								<FromUserName><![CDATA[%s]]></FromUserName>
								<CreateTime>%s</CreateTime>
								<MsgType><![CDATA[text]]></MsgType>
								<Content><![CDATA[%s]]></Content>
							</xml>";
        return sprintf($replyTextMsg,$obj->FromUserName,$obj->ToUserName,time(),$content);
    }

    //接收图片消息
    public function receiveImage($obj)
    {
        $picUrl = $obj->PicUrl;//获取图片的URL
        $mediaId = $obj->MediaId;//获取图片消息媒体id
        $picArr = array('picUrl'=>$picUrl,'mediaId'=>$mediaId);
        return $this->replyImage($obj,$picArr);

        // return $this->replyText($obj,$mediaId);
    }


    //回复图片消息
    public function replyImage($obj,$array)
    {
        //回复图片消息
        $replyImageMsg = "<xml>
								<ToUserName><![CDATA[%s]]></ToUserName>
								<FromUserName><![CDATA[%s]]></FromUserName>
								<CreateTime>%s</CreateTime>
								<MsgType><![CDATA[image]]></MsgType>
								<Image>
									<MediaId><![CDATA[%s]]></MediaId>
								</Image>
							</xml>";
        return sprintf($replyImageMsg,$obj->FromUserName,$obj->ToUserName,time(),$array['mediaId']);
    }

    //回复图文消息
    public function replyNews($obj,$newsArr)
    {
        $itemStr = "";
        if(is_array($newsArr))
        {

            foreach ($newsArr as $item)
            {
                $itemTmpl = "<item>
									<Title><![CDATA[%s]]></Title> 
									<Description><![CDATA[%s]]></Description>
									<PicUrl><![CDATA[%s]]></PicUrl>
									<Url><![CDATA[%s]]></Url>
							</item>";
                $itemStr .= sprintf($itemTmpl,$item['Title'],$item['Description'],$item['PicUrl'],$item['Url']);
            }
            $replyNewsMsg = "<xml>
									<ToUserName><![CDATA[%s]]></ToUserName>
									<FromUserName><![CDATA[%s]]></FromUserName>
									<CreateTime>%s</CreateTime>
									<MsgType><![CDATA[news]]></MsgType>
									<ArticleCount>%s</ArticleCount>
									<Articles>".$itemStr."</Articles>
								</xml> ";

            return sprintf($replyNewsMsg,$obj->FromUserName,$obj->ToUserName,time(),count($newsArr));
        }
    }

    //https请求(GET和POST)
    public function https_request($url,$data=null)
    {
        $ch = curl_init();

        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch,CURLOPT_RETURNTRANSFER,1); //将页面以文件流的形式保存

        if(!empty($data))
        {
            curl_setopt($ch, CURLOPT_POST, 1);//模拟POST请求

            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);//POST提交内容
        }
        $outopt = curl_exec($ch);

        curl_close($ch);

        return json_decode($outopt,true);//返回数组结果
    }

    //获取接口调用凭证access_token
    public function getAccessToken()
    {

        $accessToken = cache('accessToken');
        if(!empty($accessToken)){
            return $accessToken;
        }else{//获取
            $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={$this->appid}&secret={$this->appsecret}";
            $result = $this->https_request($url);
            //缓存一下
            cache('accessToken',$result['access_token'],['type'=>'memcache','expire'=>7000]);
            return $result['access_token'];
        }

    }

    //自定义菜单创建
    public function menu_create($post)
    {
        $access_token = $this->getAccessToken();
        $url = "https://api.weixin.qq.com/cgi-bin/menu/create?access_token={$access_token}";
        return $this->https_request($url,$post);
    }

    //自定义菜单查询
    public function menu_select()
    {
        $access_token = $this->getAccessToken();
        $url = "https://api.weixin.qq.com/cgi-bin/menu/get?access_token={$access_token}";
        return $this->https_request($url);
    }

    //自定义菜单删除
    public function menu_delete()
    {
        $access_token = $this->getAccessToken();
        $url = "https://api.weixin.qq.com/cgi-bin/menu/delete?access_token={$access_token}";
        return $this->https_request($url);
    }




}